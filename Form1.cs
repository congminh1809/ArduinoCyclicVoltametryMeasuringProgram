using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

// Giao tiếp qua Serial
using System.IO;
using System.IO.Ports;
using System.Xml;

// Thêm ZedGraph
using ZedGraph;

namespace CsharpInterface
{
    public
    partial class Form1 : Form
    {
        string SDatas = String.Empty; // Khai báo chuỗi để lưu dữ liệu cảm biến gửi qua Serial
        string SRealTime = String.Empty; // Khai báo chuỗi để lưu thời gian gửi qua Serial
        int status = 0; // Khai báo biến để xử lý sự kiện vẽ đồ thị
        double realtime = 0; //Khai báo biến thời gian để vẽ đồ thị
        double datas = 0; //Khai báo biến dữ liệu cảm biến để vẽ đồ thị

        //double[] dataToSmooth = { -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -17.1429, -15.2996, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -14.3779, -15.2996, -16.2212, -15.2996, -16.2212, -16.2212, 6.82027, -11.6129, -12.5346, -12.5346, -13.4562, -13.4562, -12.5346, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -12.5346, -12.5346, -12.5346, -13.4562, -12.5346, -13.4562, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -13.4562, 4.97695, -7.92628, -9.76959, -9.76959, -9.76959, -9.76959, -10.6913, -9.76959, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -10.6913, -10.6913, 3.13362, -7.92628, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, 3.13362, -7.00462, -7.00462, -7.92628, -7.00462, -7.00462, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, 3.13362, -5.1613, -6.08296, -6.08296, -7.00462, -6.08296, -6.08296, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -6.08296, -7.92628, -7.00462, 2.21196, -4.23964, -3.31799, -4.23964, -5.1613, -5.1613, -4.23964, -4.23964, -5.1613, -5.1613, -6.08296, -4.23964, -6.08296, -6.08296, -4.23964, -5.1613, 4.97695, 10.5069, 6.82027, 4.97695, 4.0553, 5.89861, 3.13362, 4.0553, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 2.21196, 2.21196, 3.13362, 2.21196, 1.2903, 2.21196, 1.2903, 1.2903, 0.36866, 2.21196, 1.2903, 1.2903, 1.2903, 0.36866, 1.2903, 0.36866, 0.36866, 1.2903, 16.0369, 26.1751, 22.4885, 20.6451, 18.8018, 18.8018, 17.8802, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 15.1152, 16.0369, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 15.1152, 14.1935, 14.1935, 14.1935, 13.2719, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 12.3502, 13.2719, 35.3917, 31.7051, 28.9401, 26.1751, 26.1751, 25.2535, 23.4101, 25.2535, 23.4101, 23.4101, 23.4101, 22.4885, 22.4885, 22.4885, 22.4885, 21.5668, 21.5668, 21.5668, 20.6451, 20.6451, 20.6451, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 18.8018, 19.7235, 18.8018, 18.8018, 18.8018, 18.8018, 33.5484, 17.8802, 17.8802, 16.9585, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 16.0369, 16.0369, 15.1152, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 12.3502, 12.3502, 12.3502, 12.3502, 26.1751, 12.3502, 12.3502, 11.4286, 12.3502, 12.3502, 12.3502, 12.3502, 11.4286, 12.3502, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 10.5069, 10.5069, 11.4286, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 24.3318, 10.5069, 10.5069, 9.58524, 10.5069, 10.5069, 9.58524, 9.58524, 10.5069, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 9.58524, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 16.9585, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 7.74191, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 12.3502, 8.66359, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 3.13362, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 6.82027, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 2.21196, 6.82027, 6.82027, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -5.1613, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -0.55299, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, -3.31799, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, -7.92628, 1.2903, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 4.0553, 4.0553, 2.21196, 4.0553, 4.0553, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, -15.2996, -18.9862, -16.2212, -13.4562, -12.5346, -11.6129, -11.6129, -12.5346, -11.6129, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -9.76959, -9.76959, -8.84793, -9.76959, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -43.871, -30.9677, -26.3595, -24.5161, -23.5945, -22.6728, -20.8295, -21.7512, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -41.106, -25.4378, -23.5945, -23.5945, -23.5945, -22.6728, -21.7512, -21.7512, -21.7512, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -44.7926, -25.4378, -23.5945, -23.5945, -22.6728, -22.6728, -21.7512, -21.7512, -22.6728, -20.8295, -21.7512, -20.8295, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -18.9862, -19.9078, -18.9862, -18.9862, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -41.106, -21.7512, -20.8295, -21.7512, -19.9078, -19.9078, -19.9078, -18.9862, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.0645, -18.0645, -36.4977, -21.7512, -20.8295, -19.9078, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.9862, -17.1429, -56.7742, -24.5161, -22.6728, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -49.4009, -21.7512, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -16.2212 };
        //double[] dataToSmooth = { -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -17.1429, -15.2996, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -14.3779, -15.2996, -16.2212, -15.2996, -16.2212, -16.2212, 6.82027, -11.6129, -12.5346, -12.5346, -13.4562, -13.4562, -12.5346, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -12.5346, -12.5346, -12.5346, -13.4562, -12.5346, -13.4562, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -13.4562, 4.97695, -7.92628, -9.76959, -9.76959, -9.76959, -9.76959, -10.6913, -9.76959, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -10.6913, -10.6913, 3.13362, -7.92628, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, 3.13362, -7.00462, -7.00462, -7.92628, -7.00462, -7.00462, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, 3.13362, -5.1613, -6.08296, -6.08296, -7.00462, -6.08296, -6.08296, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -6.08296, -7.92628, -7.00462, 2.21196, -4.23964, -3.31799, -4.23964, -5.1613, -5.1613, -4.23964, -4.23964, -5.1613, -5.1613, -6.08296, -4.23964, -6.08296, -6.08296, -4.23964, -5.1613, 4.97695, 10.5069, 6.82027, 4.97695, 4.0553, 5.89861, 3.13362, 4.0553, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 2.21196, 2.21196, 3.13362, 2.21196, 1.2903, 2.21196, 1.2903, 1.2903, 0.36866, 2.21196, 1.2903, 1.2903, 1.2903, 0.36866, 1.2903, 0.36866, 0.36866, 1.2903, 16.0369, 26.1751, 22.4885, 20.6451, 18.8018, 18.8018, 17.8802, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 15.1152, 16.0369, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 15.1152, 14.1935, 14.1935, 14.1935, 13.2719, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 12.3502, 13.2719, 35.3917, 31.7051, 28.9401, 26.1751, 26.1751, 25.2535, 23.4101, 25.2535, 23.4101, 23.4101, 23.4101, 22.4885, 22.4885, 22.4885, 22.4885, 21.5668, 21.5668, 21.5668, 20.6451, 20.6451, 20.6451, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 18.8018, 19.7235, 18.8018, 18.8018, 18.8018, 18.8018, 33.5484, 17.8802, 17.8802, 16.9585, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 16.0369, 16.0369, 15.1152, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 12.3502, 12.3502, 12.3502, 12.3502, 26.1751, 12.3502, 12.3502, 11.4286, 12.3502, 12.3502, 12.3502, 12.3502, 11.4286, 12.3502, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 10.5069, 10.5069, 11.4286, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 24.3318, 10.5069, 10.5069, 9.58524, 10.5069, 10.5069, 9.58524, 9.58524, 10.5069, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 9.58524, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 16.9585, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 7.74191, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 12.3502, 8.66359, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 3.13362, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 6.82027, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 2.21196, 6.82027, 6.82027, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -5.1613, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -0.55299, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, -3.31799, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, -7.92628, 1.2903, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 4.0553, 4.0553, 2.21196, 4.0553, 4.0553, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, -15.2996, -18.9862, -16.2212, -13.4562, -12.5346, -11.6129, -11.6129, -12.5346, -11.6129, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -9.76959, -9.76959, -8.84793, -9.76959, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -43.871, -30.9677, -26.3595, -24.5161, -23.5945, -22.6728, -20.8295, -21.7512, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -41.106, -25.4378, -23.5945, -23.5945, -23.5945, -22.6728, -21.7512, -21.7512, -21.7512, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -44.7926, -25.4378, -23.5945, -23.5945, -22.6728, -22.6728, -21.7512, -21.7512, -22.6728, -20.8295, -21.7512, -20.8295, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -18.9862, -19.9078, -18.9862, -18.9862, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -41.106, -21.7512, -20.8295, -21.7512, -19.9078, -19.9078, -19.9078, -18.9862, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.0645, -18.0645, -36.4977, -21.7512, -20.8295, -19.9078, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.9862, -17.1429, -56.7742, -24.5161, -22.6728, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -49.4009, -21.7512, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -16.2212, -9.25596e+61, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -17.1429, -15.2996, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -14.3779, -15.2996, -16.2212, -15.2996, -16.2212, -16.2212, 6.82027, -11.6129, -12.5346, -12.5346, -13.4562, -13.4562, -12.5346, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -12.5346, -12.5346, -12.5346, -13.4562, -12.5346, -13.4562, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -13.4562, 4.97695, -7.92628, -9.76959, -9.76959, -9.76959, -9.76959, -10.6913, -9.76959, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -10.6913, -10.6913, 3.13362, -7.92628, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, 3.13362, -7.00462, -7.00462, -7.92628, -7.00462, -7.00462, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, 3.13362, -5.1613, -6.08296, -6.08296, -7.00462, -6.08296, -6.08296, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -6.08296, -7.92628, -7.00462, 2.21196, -4.23964, -3.31799, -4.23964, -5.1613, -5.1613, -4.23964, -4.23964, -5.1613, -5.1613, -6.08296, -4.23964, -6.08296, -6.08296, -4.23964, -5.1613, 4.97695, 10.5069, 6.82027, 4.97695, 4.0553, 5.89861, 3.13362, 4.0553, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 2.21196, 2.21196, 3.13362, 2.21196, 1.2903, 2.21196, 1.2903, 1.2903, 0.36866, 2.21196, 1.2903, 1.2903, 1.2903, 0.36866, 1.2903, 0.36866, 0.36866, 1.2903, 16.0369, 26.1751, 22.4885, 20.6451, 18.8018, 18.8018, 17.8802, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 15.1152, 16.0369, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 15.1152, 14.1935, 14.1935, 14.1935, 13.2719, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 12.3502, 13.2719, 35.3917, 31.7051, 28.9401, 26.1751, 26.1751, 25.2535, 23.4101, 25.2535, 23.4101, 23.4101, 23.4101, 22.4885, 22.4885, 22.4885, 22.4885, 21.5668, 21.5668, 21.5668, 20.6451, 20.6451, 20.6451, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 18.8018, 19.7235, 18.8018, 18.8018, 18.8018, 18.8018, 33.5484, 17.8802, 17.8802, 16.9585, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 16.0369, 16.0369, 15.1152, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 12.3502, 12.3502, 12.3502, 12.3502, 26.1751, 12.3502, 12.3502, 11.4286, 12.3502, 12.3502, 12.3502, 12.3502, 11.4286, 12.3502, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 10.5069, 10.5069, 11.4286, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 24.3318, 10.5069, 10.5069, 9.58524, 10.5069, 10.5069, 9.58524, 9.58524, 10.5069, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 9.58524, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 16.9585, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 7.74191, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 12.3502, 8.66359, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 3.13362, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 6.82027, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 2.21196, 6.82027, 6.82027, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -5.1613, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -0.55299, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, -3.31799, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, -7.92628, 1.2903, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 4.0553, 4.0553, 2.21196, 4.0553, 4.0553, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, -15.2996, -18.9862, -16.2212, -13.4562, -12.5346, -11.6129, -11.6129, -12.5346, -11.6129, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -9.76959, -9.76959, -8.84793, -9.76959, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -43.871, -30.9677, -26.3595, -24.5161, -23.5945, -22.6728, -20.8295, -21.7512, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -41.106, -25.4378, -23.5945, -23.5945, -23.5945, -22.6728, -21.7512, -21.7512, -21.7512, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -44.7926, -25.4378, -23.5945, -23.5945, -22.6728, -22.6728, -21.7512, -21.7512, -22.6728, -20.8295, -21.7512, -20.8295, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -18.9862, -19.9078, -18.9862, -18.9862, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -41.106, -21.7512, -20.8295, -21.7512, -19.9078, -19.9078, -19.9078, -18.9862, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.0645, -18.0645, -36.4977, -21.7512, -20.8295, -19.9078, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.9862, -17.1429, -56.7742, -24.5161, -22.6728, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -49.4009, -21.7512, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -16.2212, -9.25596e+61, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -17.1429, -15.2996, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -14.3779, -15.2996, -16.2212, -15.2996, -16.2212, -16.2212, 6.82027, -11.6129, -12.5346, -12.5346, -13.4562, -13.4562, -12.5346, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -12.5346, -12.5346, -12.5346, -13.4562, -12.5346, -13.4562, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -13.4562, 4.97695, -7.92628, -9.76959, -9.76959, -9.76959, -9.76959, -10.6913, -9.76959, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -10.6913, -10.6913, 3.13362, -7.92628, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, 3.13362, -7.00462, -7.00462, -7.92628, -7.00462, -7.00462, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, 3.13362, -5.1613, -6.08296, -6.08296, -7.00462, -6.08296, -6.08296, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -6.08296, -7.92628, -7.00462, 2.21196, -4.23964, -3.31799, -4.23964, -5.1613, -5.1613, -4.23964, -4.23964, -5.1613, -5.1613, -6.08296, -4.23964, -6.08296, -6.08296, -4.23964, -5.1613, 4.97695, 10.5069, 6.82027, 4.97695, 4.0553, 5.89861, 3.13362, 4.0553, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 2.21196, 2.21196, 3.13362, 2.21196, 1.2903, 2.21196, 1.2903, 1.2903, 0.36866, 2.21196, 1.2903, 1.2903, 1.2903, 0.36866, 1.2903, 0.36866, 0.36866, 1.2903, 16.0369, 26.1751, 22.4885, 20.6451, 18.8018, 18.8018, 17.8802, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 15.1152, 16.0369, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 15.1152, 14.1935, 14.1935, 14.1935, 13.2719, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 12.3502, 13.2719, 35.3917, 31.7051, 28.9401, 26.1751, 26.1751, 25.2535, 23.4101, 25.2535, 23.4101, 23.4101, 23.4101, 22.4885, 22.4885, 22.4885, 22.4885, 21.5668, 21.5668, 21.5668, 20.6451, 20.6451, 20.6451, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 18.8018, 19.7235, 18.8018, 18.8018, 18.8018, 18.8018, 33.5484, 17.8802, 17.8802, 16.9585, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 16.0369, 16.0369, 15.1152, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 12.3502, 12.3502, 12.3502, 12.3502, 26.1751, 12.3502, 12.3502, 11.4286, 12.3502, 12.3502, 12.3502, 12.3502, 11.4286, 12.3502, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 10.5069, 10.5069, 11.4286, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 24.3318, 10.5069, 10.5069, 9.58524, 10.5069, 10.5069, 9.58524, 9.58524, 10.5069, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 9.58524, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 16.9585, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 7.74191, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 12.3502, 8.66359, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 3.13362, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 6.82027, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 2.21196, 6.82027, 6.82027, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -5.1613, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -0.55299, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, -3.31799, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, -7.92628, 1.2903, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 4.0553, 4.0553, 2.21196, 4.0553, 4.0553, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, -15.2996, -18.9862, -16.2212, -13.4562, -12.5346, -11.6129, -11.6129, -12.5346, -11.6129, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -9.76959, -9.76959, -8.84793, -9.76959, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -43.871, -30.9677, -26.3595, -24.5161, -23.5945, -22.6728, -20.8295, -21.7512, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -41.106, -25.4378, -23.5945, -23.5945, -23.5945, -22.6728, -21.7512, -21.7512, -21.7512, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -44.7926, -25.4378, -23.5945, -23.5945, -22.6728, -22.6728, -21.7512, -21.7512, -22.6728, -20.8295, -21.7512, -20.8295, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -18.9862, -19.9078, -18.9862, -18.9862, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -41.106, -21.7512, -20.8295, -21.7512, -19.9078, -19.9078, -19.9078, -18.9862, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.0645, -18.0645, -36.4977, -21.7512, -20.8295, -19.9078, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.9862, -17.1429, -56.7742, -24.5161, -22.6728, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -49.4009, -21.7512, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -16.2212, -9.25596e+61, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -17.1429, -15.2996, -16.2212, -16.2212, -16.2212, -16.2212, -16.2212, -14.3779, -15.2996, -16.2212, -15.2996, -16.2212, -16.2212, 6.82027, -11.6129, -12.5346, -12.5346, -13.4562, -13.4562, -12.5346, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -13.4562, -12.5346, -12.5346, -12.5346, -13.4562, -12.5346, -13.4562, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -12.5346, -13.4562, 4.97695, -7.92628, -9.76959, -9.76959, -9.76959, -9.76959, -10.6913, -9.76959, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -10.6913, -10.6913, 3.13362, -7.92628, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, -9.76959, 3.13362, -7.00462, -7.00462, -7.92628, -7.00462, -7.00462, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -7.92628, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, 3.13362, -5.1613, -6.08296, -6.08296, -7.00462, -6.08296, -6.08296, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -7.00462, -6.08296, -7.92628, -7.00462, 2.21196, -4.23964, -3.31799, -4.23964, -5.1613, -5.1613, -4.23964, -4.23964, -5.1613, -5.1613, -6.08296, -4.23964, -6.08296, -6.08296, -4.23964, -5.1613, 4.97695, 10.5069, 6.82027, 4.97695, 4.0553, 5.89861, 3.13362, 4.0553, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 2.21196, 2.21196, 3.13362, 2.21196, 1.2903, 2.21196, 1.2903, 1.2903, 0.36866, 2.21196, 1.2903, 1.2903, 1.2903, 0.36866, 1.2903, 0.36866, 0.36866, 1.2903, 16.0369, 26.1751, 22.4885, 20.6451, 18.8018, 18.8018, 17.8802, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 15.1152, 16.0369, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 15.1152, 14.1935, 14.1935, 14.1935, 13.2719, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 12.3502, 13.2719, 35.3917, 31.7051, 28.9401, 26.1751, 26.1751, 25.2535, 23.4101, 25.2535, 23.4101, 23.4101, 23.4101, 22.4885, 22.4885, 22.4885, 22.4885, 21.5668, 21.5668, 21.5668, 20.6451, 20.6451, 20.6451, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 19.7235, 18.8018, 19.7235, 18.8018, 18.8018, 18.8018, 18.8018, 33.5484, 17.8802, 17.8802, 16.9585, 16.9585, 16.9585, 16.9585, 16.0369, 16.0369, 16.0369, 16.0369, 16.0369, 15.1152, 15.1152, 15.1152, 15.1152, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 14.1935, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 13.2719, 12.3502, 12.3502, 12.3502, 12.3502, 26.1751, 12.3502, 12.3502, 11.4286, 12.3502, 12.3502, 12.3502, 12.3502, 11.4286, 12.3502, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 11.4286, 10.5069, 10.5069, 11.4286, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 10.5069, 24.3318, 10.5069, 10.5069, 9.58524, 10.5069, 10.5069, 9.58524, 9.58524, 10.5069, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 9.58524, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 9.58524, 9.58524, 9.58524, 9.58524, 8.66359, 16.9585, 8.66359, 9.58524, 9.58524, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 8.66359, 8.66359, 8.66359, 7.74191, 8.66359, 7.74191, 8.66359, 8.66359, 7.74191, 8.66359, 8.66359, 12.3502, 8.66359, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 8.66359, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 3.13362, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 7.74191, 6.82027, 6.82027, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 7.74191, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 2.21196, 6.82027, 6.82027, 7.74191, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -5.1613, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, -0.55299, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 6.82027, 6.82027, 5.89861, 6.82027, -3.31799, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 6.82027, 6.82027, 6.82027, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 6.82027, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 5.89861, 6.82027, 5.89861, -7.92628, 1.2903, 3.13362, 3.13362, 3.13362, 2.21196, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 4.0553, 4.0553, 2.21196, 4.0553, 4.0553, 3.13362, 4.0553, 4.0553, 3.13362, 4.0553, 3.13362, 3.13362, 4.0553, -15.2996, -18.9862, -16.2212, -13.4562, -12.5346, -11.6129, -11.6129, -12.5346, -11.6129, -10.6913, -10.6913, -10.6913, -10.6913, -10.6913, -9.76959, -9.76959, -9.76959, -8.84793, -9.76959, -9.76959, -8.84793, -8.84793, -9.76959, -8.84793, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -7.92628, -8.84793, -8.84793, -8.84793, -43.871, -30.9677, -26.3595, -24.5161, -23.5945, -22.6728, -20.8295, -21.7512, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -41.106, -25.4378, -23.5945, -23.5945, -23.5945, -22.6728, -21.7512, -21.7512, -21.7512, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -44.7926, -25.4378, -23.5945, -23.5945, -22.6728, -22.6728, -21.7512, -21.7512, -22.6728, -20.8295, -21.7512, -20.8295, -20.8295, -19.9078, -20.8295, -19.9078, -19.9078, -18.9862, -19.9078, -18.9862, -18.9862, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -41.106, -21.7512, -20.8295, -21.7512, -19.9078, -19.9078, -19.9078, -18.9862, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.9862, -18.0645, -18.0645, -36.4977, -21.7512, -20.8295, -19.9078, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.9862, -17.1429, -56.7742, -24.5161, -22.6728, -21.7512, -21.7512, -20.8295, -20.8295, -20.8295, -19.9078, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -49.4009, -21.7512, -19.9078, -19.9078, -18.9862, -18.9862, -18.9862, -18.0645, -18.0645, -18.0645, -18.0645, -18.0645, -17.1429, -17.1429, -17.1429, -17.1429, -17.1429, -16.2212};
        double[] dataToSmooth = new double[10000];
        //double[] dataToSmooth = Array.Empty;
        int dataToSmoothCount = 0; 

        public
            Form1()
        {
            InitializeComponent();

            //string[] BR = { "4800", "9600", "230400" };
            //comboBR.Items.addRange(BR);
        }

        private
            void Form1_Load(object sender, EventArgs e)
        {
            comboBoxName.DataSource = SerialPort.GetPortNames(); // Lấy nguồn cho comboBox là tên của cổng COM
            comboBoxName.Text = Properties.Settings.Default.ComName; // Lấy ComName đã làm ở bước 5 cho comboBox
            

            // Khởi tạo ZedGraph
            GraphPane myPane = zedGraphControl1.GraphPane;
            myPane.Title.Text = "Cyclic - Voltammetry Graph";
            myPane.XAxis.Title.Text = "Potential (mV)";
            myPane.YAxis.Title.Text = "Current (mA)";

            RollingPointPairList list = new RollingPointPairList(60000);
            LineItem curve = myPane.AddCurve("Dữ liệu", list, Color.Red, SymbolType.None);

            myPane.XAxis.Scale.Min = -10;
            myPane.XAxis.Scale.Max = 10;
            myPane.XAxis.Scale.MinorStep = 1;
            myPane.XAxis.Scale.MajorStep = 5;
            myPane.YAxis.Scale.Min = -20;
            myPane.YAxis.Scale.Max = 20;

            myPane.AxisChange();
        }

        // Hàm Tick này sẽ bắt sự kiện cổng Serial mở hay không
        private
            void timer1_Tick(object sender, EventArgs e)
        {
            if (!serialPort1.IsOpen)
            {
                progressBar1.Value = 0;
                //ClearZedGraph();
            }
            else if (serialPort1.IsOpen)
            {
                progressBar1.Value = 100;
                Draw();
                Data_Listview();
                status = 0;

            }
        }
        // Hàm này lưu lại cổng COM đã chọn cho lần kết nối
        private
            void SaveSetting()
        {
            Properties.Settings.Default.ComName = comboBoxName.Text;
            Properties.Settings.Default.Save();
        }


        //Array.Clear(dataToSmooth, 0, dataToSmooth.length);
        // Nhận và xử lý string gửi từ Serial
        private
            void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {

            if (serialPort1.IsOpen)
            {
                try
                {
                    string[] arrList = serialPort1.ReadLine().Split('|'); // Đọc một dòng của Serial, cắt chuỗi khi gặp ký tự gạch đứng
                    SRealTime = arrList[0]; // Chuỗi đầu tiên lưu vào SRealTime
                    SDatas = arrList[1]; // Chuỗi thứ hai lưu vào SDatas
                    double.TryParse(SDatas, out datas); // Chuyển đổi sang   kiểu double
                    double.TryParse(SRealTime, out realtime);

                    //dataToSmooth[dataToSmoothCount] = datas;
                    //dataToSmoothCount++;

                    realtime = realtime / 100; // Đối ms sang s
                                               //datas = datas ;
                    status = 1; // Bắt sự kiện xử lý xong chuỗi, đổi starus về 1 để hiển thị dữ liệu trong ListView và vẽ đồ thị
                }
                catch
                {
                    return;
                }
            }
            
        }


        // Hiển thị dữ liệu trong ListView
        private
            void Data_Listview()
        {
            if (status == 0)
                return;
            else
            {
                ListViewItem item = new ListViewItem(realtime.ToString()); // Gán biến realtime vào cột đầu tiên của ListView
                item.SubItems.Add(datas.ToString());

                dataToSmooth[dataToSmoothCount] = datas;
                dataToSmoothCount++;

                listView1.Items.Add(item); // Gán biến datas vào cột tiếp theo của ListView
                                           // Không nên gán string SDatas vì khi xuất dữ liệu sang Excel sẽ là dạng string, không thực hiện các phép toán được

                listView1.Items[listView1.Items.Count - 1].EnsureVisible(); // Hiện thị dòng được gán gần nhất ở ListView, tức là mình cuộn ListView theo dữ liệu gần nhất đó
            }
        }


        //int graphDrawCount = 0;
        //int n;

        // Vẽ đồ thị
        private
            void Draw()
        {

            if (zedGraphControl1.GraphPane.CurveList.Count <= 0)
                return;

            LineItem curve = zedGraphControl1.GraphPane.CurveList[0] as LineItem;

            if (curve == null)
                return;

            IPointListEdit list = curve.Points as IPointListEdit;

            if (list == null)
                return;

            list.Add(realtime, datas); // Thêm điểm trên đồ thị
            //n = (Convert.ToInt32(txt_EVol) - Convert.ToInt32(txt_SVol)) / Convert.ToInt32(txt_Step) + 1;
            //n = 401;
            //if (graphDrawCount%n==0)
            //{
            //    list.Add(realtime, dataToSmooth[graphDrawCount]); // Thêm điểm trên đồ thị
            //}
            //list.Add(realtime, dataToSmooth[graphDrawCount]);
            //graphDrawCount++;

            Scale xScale = zedGraphControl1.GraphPane.XAxis.Scale;
            Scale yScale = zedGraphControl1.GraphPane.YAxis.Scale;

            // Tự động Scale theo trục x
            if (realtime > xScale.Max - xScale.MajorStep)
            {
                xScale.Max = realtime + xScale.MajorStep;
                xScale.Min = xScale.Max - 30;
            }

            // Tự động Scale theo trục y
            if (datas > yScale.Max - yScale.MajorStep)
            {
                yScale.Max = datas + yScale.MajorStep;
            }
            else if (datas < yScale.Min + yScale.MajorStep)
            {
                yScale.Min = datas - yScale.MajorStep;
            }

            zedGraphControl1.AxisChange();
            zedGraphControl1.Invalidate();
            zedGraphControl1.Refresh();

            //ZedGraph.GraphPane myPane = zedGraphControl1.GraphPane;
            //myPane.XAxis.Scale.Min = 0.0;
            //zedGraphControl1.AxisChange();
            //zedGraphControl1.RestoreScale(myPane);
            //zedGraphControl1.ZoomOut(pane);
        }

        // Xóa đồ thị, với ZedGraph thì phải khai báo lại như ở hàm Form1_Load, nếu không sẽ không hiển thị
        private
            void ClearZedGraph()
        {
            zedGraphControl1.GraphPane.CurveList.Clear(); // Xóa đường
            zedGraphControl1.GraphPane.GraphObjList.Clear(); // Xóa đối tượng

            zedGraphControl1.AxisChange();
            zedGraphControl1.Invalidate();

            GraphPane myPane = zedGraphControl1.GraphPane;
            myPane.Title.Text = "Current-Voltage chart for Biomedical Testing";
            myPane.XAxis.Title.Text = "Potential (mV)";
            myPane.YAxis.Title.Text = "Current (mA)";

            RollingPointPairList list = new RollingPointPairList(60000);
            LineItem curve = myPane.AddCurve("Dữ liệu", list, Color.Red, SymbolType.None);

            myPane.XAxis.Scale.Min = -10;
            myPane.XAxis.Scale.Max = 10;
            myPane.XAxis.Scale.MinorStep = 1;
            myPane.XAxis.Scale.MajorStep = 5;
            myPane.YAxis.Scale.Min = -20;
            myPane.YAxis.Scale.Max = 20;

            zedGraphControl1.AxisChange();
        }

        // Hàm xóa dữ liệu
        private
            void ResetValue()
        {
            realtime = 0;
            datas = 0;
            SDatas = String.Empty;
            SRealTime = String.Empty;
            status = 0; // Chuyển status về 0
        }

        // Hàm làm mịn dữ liệu
        private
            void SmoothingData(double[] a)
        {
            double[] b = a;

            int n, frame;
            //int num = 1;
            double sum = 0;
            int countFrame = 1;
            frame = 25;
            n = 802;
            //n = (Convert.ToInt32(txt_EVol) - Convert.ToInt32(txt_SVol)) / Convert.ToInt32(txt_Step) + 1;

            while (countFrame < frame)
            {

                sum += a[countFrame - 1];
                a[countFrame - 1] = sum / countFrame ;
                countFrame++;
                //num = num + 1;
            }

            for (int i = frame - 1; i < n; i++) 
            {
                sum = 0;
                for (int j = i + 2 - frame; j <= i; j++) 
                {
                    sum += b[j];
                }
                a[i] = sum / frame;
                sum = 0;
                //i++;
            }
            
            
        }

        // Hàm lưu ListView sang Excel
        private
            void SaveToExcel()
        {
            Microsoft.Office.Interop.Excel.Application xla = new Microsoft.Office.Interop.Excel.Application();
            xla.Visible = true;
            Microsoft.Office.Interop.Excel.Workbook wb = xla.Workbooks.Add(Microsoft.Office.Interop.Excel.XlSheetType.xlWorksheet);
            Microsoft.Office.Interop.Excel.Worksheet ws = (Microsoft.Office.Interop.Excel.Worksheet)xla.ActiveSheet;

            // Đặt tên cho hai ô A1. B1 lần lượt là "Thời gian (s)" và "Dữ liệu", sau đó tự động dãn độ rộng
            Microsoft.Office.Interop.Excel.Range rg = (Microsoft.Office.Interop.Excel.Range)ws.get_Range("A1", "B1");
            ws.Cells[1, 1] = "Potential";
            ws.Cells[1, 2] = "Current";
            ws.Cells[1, 3] = "Smooth";
            rg.Columns.AutoFit();
            
            // Lưu từ ô đầu tiên của dòng thứ 2, tức ô A2
            int i = 2;
            int j = 1;
            int smooth = 0;

            ////Làm mịn dữ liệu
            //SmoothingData(dataToSmooth);

            foreach (ListViewItem comp in listView1.Items)
            {
                ws.Cells[i, j] = comp.Text.ToString();
                foreach (ListViewItem.ListViewSubItem drv in comp.SubItems)
                {
                    ws.Cells[i, j] = drv.Text.ToString();
                    j++;
                }
                j = 1;
                i++;

                ws.Cells[smooth + 2, 3] = Convert.ToDouble(dataToSmooth[smooth]);
                smooth++;
                ws.Cells[1, 3] = "Smooth";
            }
            

        }

        // Sự kiện nhấn nút btConnect
        private
            void btConnect_Click(object sender, EventArgs e)
        {
            string str = txt_SVol.Text + '|' + txt_EVol.Text + '_' + txt_Step.Text + '?' + txt_Freq.Text;


            if (serialPort1.IsOpen)
            {
                //serialPort1.Write("0"); //Gửi ký tự "0" qua Serial, tương ứng với state = 0
                //serialPort1.DiscardOutBuffer();
                serialPort1.WriteLine(str);
                serialPort1.Close();
                btConnect.Text = "Kết nối";
                btExit.Enabled = true;
                SaveSetting(); // Lưu cổng COM vào ComName
            }
            else
            {
                serialPort1.PortName = comboBoxName.Text; // Lấy cổng COM
                serialPort1.BaudRate = Convert.ToInt32(comboBR.Text); // Baudrate là 9600, trùng với baudrate của Arduino
                //serialPort1.Write("1"); //Gửi ký tự "2" qua Serial, tương ứng với state = 1
                //dataToSmooth = new double[5000];
                try
                {
                    
                    serialPort1.Open();
                    serialPort1.DiscardOutBuffer();
                    serialPort1.WriteLine(str);
                    btConnect.Text = "Disconnect";
                    btExit.Enabled = false;
                }
                catch
                {
                    MessageBox.Show("Không thể mở cổng" + serialPort1.PortName, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        // Sự kiện nhấn nút btExxit
        private
            void btExit_Click(object sender, EventArgs e)
        {
            DialogResult traloi;
            traloi = MessageBox.Show("Bạn có chắc muốn thoát?", "Thoát", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
            if (traloi == DialogResult.OK)
            {
                Application.Exit(); // Đóng ứng dụng
            }
        }

        // Sự kiện nhấn nút btSave
        private
            void btSave_Click(object sender, EventArgs e)
        {
            DialogResult traloi;
            traloi = MessageBox.Show("Bạn có muốn lưu số liệu?", "Lưu", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
            if (traloi == DialogResult.OK)
            {
                SaveToExcel(); // Thực thi hàm lưu ListView sang Excel
            }
        }

        // Sự kiện nhấn nút btCheck
        private
            void btCheck_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                serialPort1.Write("1"); //Gửi ký tự "1" qua Serial, chạy hàm tạo Random ở Arduino
            }
            else
                MessageBox.Show("Bạn không thể chạy khi chưa kết nối với thiết bị", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);


        }

        // Sự kiện nhấn nút btPause
        private
            void btPause_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                //serialPort1.Write("0"); //Gửi ký tự "0" qua Serial, Dừng Arduino
                serialPort1.Close();
                //Làm mịn dữ liệu
                SmoothingData(dataToSmooth);
                //Draw();
            }
            else
                MessageBox.Show("Bạn không thể dừng khi chưa kết nối với thiết bị", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }

        // Sự kiện nhấn nút Clear
        private
            void btClear_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                DialogResult traloi;
                traloi = MessageBox.Show("Bạn có chắc muốn xóa?", "Xóa dữ liệu", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
                if (traloi == DialogResult.OK)
                {
                    if (serialPort1.IsOpen)
                    {
                        serialPort1.Write("2"); //Gửi ký tự "2" qua Serial
                        listView1.Items.Clear(); // Xóa listview
                        
                        //dataToSmooth = new double[5000];
                        //Xóa đường trong đồ thị
                        ClearZedGraph();

                        //Xóa dữ liệu trong Form
                        ResetValue();
                    }
                    else
                        MessageBox.Show("Bạn không thể dừng khi chưa kết nối với thiết bị", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            else
                MessageBox.Show("Bạn không thể xóa khi chưa kết nối với thiết bị", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }

        // Sự kiện nhấn nút Run
        private
            void btRun_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                //dataToSmooth = new double[5000];
                serialPort1.Write("1"); //Gửi ký tự "1" qua Serial, chạy hàm tạo Random ở Arduino
            }
            listView1.Items.Clear(); // Xóa listview
            ClearZedGraph();
            //ResetValue();
            Draw();

        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            

        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void txt_SVol_TextChanged(object sender, EventArgs e)
        {
            //if (serialPort1.IsOpen)
            //{
            //    serialPort1.Write(txt_SVol.Text);
            //}
        }

        private void txt_EVol_TextChanged(object sender, EventArgs e)
        {
            //if (serialPort1.IsOpen)
            //{
            //    serialPort1.Write("|");
            //    serialPort1.WriteLine(txt_EVol.Text);
                
            //}
        }

        private void progressBar1_Click(object sender, EventArgs e)
        {

        }

        private void txt_Step_TextChanged(object sender, EventArgs e)
        {

        }

        private void txt_Freq_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }
    }
}